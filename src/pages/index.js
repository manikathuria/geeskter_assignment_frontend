import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import Header from '@/components/Header'
import List from '@/components/List'
import Map from '@/components/Map'
import PlaceDetail from '@/components/PlaceDetail'
import { Flex } from '@chakra-ui/react'
import { useEffect, useState, useLayoutEffect } from 'react'
import { getPlacesData } from './api'

export default function Home() {
  const [places, setPlaces] = useState([]);
  const [coordinates, setCoordinates] = useState({ lat: 48.8584, lng: 2.2945 });
  const [type, setType] = useState('restaurant');
  const [ratings, setRatings] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [bounds, setBounds] = useState(null);
  const [filteredPlaces, setFilteredPlaces] = useState([]);
  // useLayoutEffect(() => {
  //   navigator.geolocation.getCurrentPosition(({
  //     coords: {
  //       latitude,
  //       longitude
  //     } 
  //   }) => {
  //     console.log('lat, lng: ', latitude, " ", longitude);
  //     setCoordinates({lat: latitude, lng: longitude});

  //   })
  // }, []);

  useEffect(() => {
    setIsLoading(true);
    getPlacesData(bounds ? bounds.sw : null, bounds ? bounds.ne : null).then((data) => {
      console.log("data: ", data);
      console.log("bounds: ", bounds);
      setPlaces(data);
      setIsLoading(false);
    });
  }, [coordinates, bounds]);

  useEffect(() => {
    const filteredData = places.filter((place) => place.rating > ratings);
    setFilteredPlaces(filteredData);
  }, [ratings]);

  return (
    <>
      <Head>
        <title>Geekster assignment</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <script src = {`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyAmE_ogtD10_QgFO5ctLfr5metvnmHyJY0` }></script>
      </Head>
      <Flex
        justify="center"
        align="center"
        width={"100vw"}
        height={"100vh"}
        maxWidth={"100vw"}
        maxHeight={"100vh"}
      >
        <Header
          setCoordinates={setCoordinates}
          setRatings={setRatings}
          setType={setType}
        />

        <List
          places={places}
          isLoading={isLoading}
        />

        <Map
          setCoordinates={setCoordinates}
          coordinates={coordinates}
          setBounds={setBounds}
          places={filteredPlaces ? filteredPlaces : places}
        />
      </Flex>
    </>
  )
}
